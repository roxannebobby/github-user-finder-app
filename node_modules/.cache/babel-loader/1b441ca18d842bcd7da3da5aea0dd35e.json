{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\roxan\\\\onedrive\\\\documents\\\\lambdaweb49\\\\unit3\\\\sprint10\\\\github-user-finder-app\\\\src\\\\components\\\\users\\\\Search.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      text: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      console.log(this.state.text);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"text\",\n          placeholder: \"Search for a User...\",\n          value: this.state.text,\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-dark btn-block\",\n          name: \"submit\",\n          value: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/users/roxan/onedrive/documents/lambdaweb49/unit3/sprint10/github-user-finder-app/src/components/users/Search.js"],"names":["React","Component","Search","state","text","onChange","e","setState","target","name","value","onSubmit","preventDefault","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE9BE,KAF8B,GAEtB;AACPC,MAAAA,IAAI,EAAE;AADC,KAFsB;;AAAA,SAc9BC,QAd8B,GAclBC,CAAD,IAAO;AACjB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACA,KAhB6B;;AAAA,SAmB9BC,QAnB8B,GAmBlBL,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACM,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,IAAvB;AACA,KAtB6B;AAAA;;AAwB9BW,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,6BACC;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAE,KAAKJ,QAAtC;AAAA,gCACC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,IAAI,EAAC,MAFN;AAGC,UAAA,WAAW,EAAC,sBAHb;AAIC,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,IAJnB;AAKC,UAAA,QAAQ,EAAE,KAAKC;AALhB;AAAA;AAAA;AAAA;AAAA,gBADD,eASC;AACC,UAAA,IAAI,EAAC,QADN;AAEC,UAAA,SAAS,EAAC,wBAFX;AAGC,UAAA,IAAI,EAAC,QAHN;AAIC,UAAA,KAAK,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,gBATD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAoBA;;AA7C6B;;AAgD/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n\t// whenever we have a form, we need to have some sort of state for any of the form fields that will be changed by the user; 'text' below is a 'slice of state' we want to monitor\r\n\tstate = {\r\n\t\ttext: '',\r\n\t};\r\n\r\n\t// here we are creating a change event; every time the text input in the form changes (someone types in something) we can capture that event through the DOM (e.target.value); the e captures each individual event change that happens\r\n\r\n\t// the below text is for only one field; the actual code below being used is when we have more than one field\r\n\t// onChange = (e) => {\r\n\t// \tthis.setState({ text: e.target.value });\r\n\t// };\r\n\r\n\t//this code accounts for more than one input field; the e.target.name specifies each input field name, and the e.target.value captures the value for that particular field\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\t// the below code is required in order to give action to the form's submit button; this.onSubmit is added to the form code below\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(this.state.text);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<form className='form' onSubmit={this.onSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='text'\r\n\t\t\t\t\t\tplaceholder='Search for a User...'\r\n\t\t\t\t\t\tvalue={this.state.text}\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tclassName='btn btn-dark btn-block'\r\n\t\t\t\t\t\tname='submit'\r\n\t\t\t\t\t\tvalue='Search'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}
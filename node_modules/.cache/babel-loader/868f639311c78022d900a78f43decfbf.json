{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\roxan\\\\onedrive\\\\documents\\\\lambdaweb49\\\\unit3\\\\sprint10\\\\github-user-finder-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// react elements\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from 'axios'; // styles\n\nimport './App.css'; // layout components\n\nimport NavBar from './components/layout/NavBar';\nimport Alert from './components/layout/Alert'; // user components\n\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search'; // pages\n\nimport About from './components/pages/About'; // state hooks\n\nimport useUsers from './components/hooks/useUsers';\nimport useLoading from './components/hooks/useLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [users, setUsers] = useUsers([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useLoading(false);\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUsers(res.data.items);\n    setLoading(false);\n  }; //get single github users\n\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUser(res.data);\n    setLoading(false);\n  }; // get user repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  };\n\n  const setAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar bg-primary\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Search, {\n                searchUsers: searchUsers,\n                clearUsers: clearUsers,\n                showClear: users.length > 0 ? true : false,\n                setAlert: setAlert\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Users, {\n                loading: useLoading,\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/user/:login\",\n            render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n              getUser: getUser,\n              getUserRepos: getUserRepos,\n              user: user,\n              repos: repos,\n              loading: useLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"Xv1u/H25YCvvuAajvKSwUt4V69Y=\", false, function () {\n  return [useUsers, useLoading];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/users/roxan/onedrive/documents/lambdaweb49/unit3/sprint10/github-user-finder-app/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","axios","NavBar","Alert","Users","User","Search","About","useUsers","useLoading","App","props","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","searchUsers","text","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","alert","length"],"mappings":"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","sourcesContent":["// react elements\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// styles\r\nimport './App.css';\r\n\r\n// layout components\r\nimport NavBar from './components/layout/NavBar';\r\nimport Alert from './components/layout/Alert';\r\n\r\n// user components\r\nimport Users from './components/users/Users';\r\nimport User from './components/users/User';\r\nimport Search from './components/users/Search';\r\n\r\n// pages\r\nimport About from './components/pages/About';\r\n\r\n// state hooks\r\nimport useUsers from './components/hooks/useUsers';\r\nimport useLoading from './components/hooks/useLoading';\r\n\r\nconst App = (props) => {\r\n\tconst [users, setUsers] = useUsers([]);\r\n\tconst [user, setUser] = useState({});\r\n\tconst [repos, setRepos] = useState([]);\r\n\tconst [loading, setLoading] = useLoading(false);\r\n\r\n\tconst searchUsers = async (text) => {\r\n\t\tsetLoading(true);\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n\t\t);\r\n\t\tsetUsers(res.data.items);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\t//get single github users\r\n\tconst getUser = async (username) => {\r\n\t\tsetLoading(true);\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n\t\t);\r\n\t\tsetUser(res.data);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\t// get user repos\r\n\tconst getUserRepos = async (username) => {\r\n\t\tsetLoading(true);\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n\t\t);\r\n\t\tsetRepos(res.data);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst clearUsers = () => {\r\n\t\tsetUsers([]);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tconst setAlert = (msg, type) => {\r\n\t\tsetAlert({ msg: msg, type: type });\r\n\t\tsetTimeout(() => setAlert(null), 5000);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<nav className='navbar bg-primary'>\r\n\t\t\t\t\t<NavBar />\r\n\t\t\t\t</nav>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<Alert alert={alert} />\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\tpath='/'\r\n\t\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\t\t\t\tsearchUsers={searchUsers}\r\n\t\t\t\t\t\t\t\t\t\tclearUsers={clearUsers}\r\n\t\t\t\t\t\t\t\t\t\tshowClear={users.length > 0 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\tsetAlert={setAlert}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Users loading={useLoading} users={users} />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route exact path='/about' component={About} />\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\tpath='/user/:login'\r\n\t\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t\t<User\r\n\t\t\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\t\t\tgetUser={getUser}\r\n\t\t\t\t\t\t\t\t\tgetUserRepos={getUserRepos}\r\n\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\trepos={repos}\r\n\t\t\t\t\t\t\t\t\tloading={useLoading}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\roxan\\\\onedrive\\\\documents\\\\lambdaweb49\\\\unit3\\\\sprint10\\\\github-user-finder-app\\\\src\\\\context\\\\alert\\\\AlertState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertState = props => {\n  _s();\n\n  // global state for anything that has to do with users\n  const initialState = null; // to dispatch to our reducer\n\n  const [state, dispatch] = useReducer(AlertReducer, initialState); // show alert\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      alert: state,\n      setAlert\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AlertState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AlertState;\nexport default AlertState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertState\");","map":{"version":3,"sources":["C:/users/roxan/onedrive/documents/lambdaweb49/unit3/sprint10/github-user-finder-app/src/context/alert/AlertState.js"],"names":["React","useReducer","axios","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","showAlert","msg","type","setAlert","setTimeout","alert","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC7B;AACA,QAAMC,YAAY,GAAG,IAArB,CAF6B,CAI7B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACG,YAAD,EAAeK,YAAf,CAApC,CAL6B,CAO7B;;AACA,QAAMG,SAAS,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAChCC,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,MAAMD,QAAQ,CAAC,IAAD,CAAf,EAAuB,IAAvB,CAAV;AACA,GAHD;;AAIA,sBACC,QAAC,YAAD,CAAc,QAAd;AACC,IAAA,KAAK,EAAE;AACNE,MAAAA,KAAK,EAAEP,KADD;AAENK,MAAAA;AAFM,KADR;AAAA,cAMEP,KAAK,CAACU;AANR;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CAtBD;;GAAMX,U;;KAAAA,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = (props) => {\r\n\t// global state for anything that has to do with users\r\n\tconst initialState = null;\r\n\r\n\t// to dispatch to our reducer\r\n\tconst [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n\t// show alert\r\n\tconst showAlert = (msg, type) => {\r\n\t\tsetAlert({ msg, type });\r\n\t\tsetTimeout(() => setAlert(null), 5000);\r\n\t};\r\n\treturn (\r\n\t\t<AlertContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\talert: state,\r\n\t\t\t\tsetAlert,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AlertContext.Provider>\r\n\t);\r\n};\r\nexport default AlertState;\r\n"]},"metadata":{},"sourceType":"module"}
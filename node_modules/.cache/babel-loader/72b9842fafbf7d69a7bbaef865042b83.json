{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\roxan\\\\onedrive\\\\documents\\\\lambdaweb49\\\\unit3\\\\sprint10\\\\github-user-finder-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport NavBar from './components/layout/NavBar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      users: [],\n      user: {},\n      repos: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: [],\n        loading: false\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      // we added a new slice of state about called alert, so now we will set a new state when this method is called, and it will put the message text into msg and the type style into type\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      }); // add setTimeout method to make sure the message goes away after a short time; this resets the alert state to null after 5000 milliseconds (5 seconds)\n\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const {\n      users,\n      loading,\n      user,\n      repos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navbar bg-primary\",\n          children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            alert: this.state.alert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Search, {\n                  searchUsers: this.searchUsers,\n                  clearUsers: this.clearUsers,\n                  showClear: users.length > 0 ? true : false,\n                  setAlert: this.setAlert\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Users, {\n                  loading: loading,\n                  users: users\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              component: About\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/user/:login\",\n              render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n                getUser: this.getUser,\n                getUserRepos: this.getUserRepos,\n                user: user,\n                repos: repos,\n                loading: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/users/roxan/onedrive/documents/lambdaweb49/unit3/sprint10/github-user-finder-app/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","axios","NavBar","Users","User","Search","Alert","About","App","state","users","user","repos","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport NavBar from './components/layout/NavBar';\r\nimport Users from './components/users/Users';\r\nimport User from './components/users/User';\r\nimport Search from './components/users/Search';\r\nimport Alert from './components/layout/Alert';\r\nimport About from './components/pages/About';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tusers: [],\r\n\t\tuser: {},\r\n\t\trepos: [],\r\n\t\tloading: false,\r\n\t\talert: null,\r\n\t};\r\n\r\n\t// using this.state because this is a class component\r\n\t// once we have added our searchUsers method below, this code is no longer needed as all it does is display a random 30 users from a github call\r\n\r\n\t// async componentDidMount() {\r\n\t// \tthis.setState({ loading: true });\r\n\t// \tconst res = await axios.get(\r\n\t// \t\t`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n\t// \t);\r\n\t// \tthis.setState({ users: res.data, loading: false });\r\n\t// }\r\n\r\n\t// below we have drilled UP this.state.text (which is a component-level state) from the Search.js page and so we refer to this \"prop\" as 'text' so we can complete the code needed to change the text state\r\n\r\n\t// to search users now, we make a call to the github search/users\r\n\tsearchUsers = async (text) => {\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n\t\t);\r\n\t\tthis.setState({ users: res.data.items, loading: false });\r\n\t};\r\n\r\n\t//get single github users\r\n\tgetUser = async (username) => {\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n\t\t);\r\n\t\tthis.setState({ user: res.data, loading: false });\r\n\t};\r\n\r\n\t// get user repos\r\n\tgetUserRepos = async (username) => {\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n\t\t);\r\n\t\tthis.setState({ repos: res.data, loading: false });\r\n\t};\r\n\r\n\t// clear users from state; this also works from drilling props UP from the search component\r\n\r\n\t// the showClear prop added to <Search /> below is a ternary used to only show the clear button IF the length of the state of users is greater than 0\r\n\r\n\tclearUsers = () => {\r\n\t\tthis.setState({ users: [], loading: false });\r\n\t};\r\n\r\n\t// set the Alert that is triggered in the Search.js component; prop values are coming from the Search.js component\r\n\tsetAlert = (msg, type) => {\r\n\t\t// we added a new slice of state about called alert, so now we will set a new state when this method is called, and it will put the message text into msg and the type style into type\r\n\r\n\t\tthis.setState({ alert: { msg: msg, type: type } });\r\n\r\n\t\t// add setTimeout method to make sure the message goes away after a short time; this resets the alert state to null after 5000 milliseconds (5 seconds)\r\n\t\tsetTimeout(() => this.setState({ alert: null }), 5000);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { users, loading, user, repos } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<div className='App'>\r\n\t\t\t\t\t<nav className='navbar bg-primary'>\r\n\t\t\t\t\t\t<NavBar />\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<Alert alert={this.state.alert} />\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\t\tpath='/'\r\n\t\t\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\t\t\t\t\tsearchUsers={this.searchUsers}\r\n\t\t\t\t\t\t\t\t\t\t\tclearUsers={this.clearUsers}\r\n\t\t\t\t\t\t\t\t\t\t\tshowClear={users.length > 0 ? true : false}\r\n\t\t\t\t\t\t\t\t\t\t\tsetAlert={this.setAlert}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Users loading={loading} users={users} />\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route exact path='/about' component={About} />\r\n\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\t\tpath='/user/:login'\r\n\t\t\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t\t\t<User\r\n\t\t\t\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\t\t\t\tgetUser={this.getUser}\r\n\t\t\t\t\t\t\t\t\t\tgetUserRepos={this.getUserRepos}\r\n\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\trepos={repos}\r\n\t\t\t\t\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
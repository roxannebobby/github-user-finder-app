{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\roxan\\\\onedrive\\\\documents\\\\lambdaweb49\\\\unit3\\\\sprint10\\\\github-user-finder-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport NavBar from './components/layout/NavBar';\nimport Users from './components/users/Users';\nimport Search from './components/users/Search';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      users: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: [],\n        loading: false\n      });\n    };\n\n    this.setAlert = _ref => {\n      let {\n        msg,\n        type\n      } = _ref;\n      // we added a new slice of state about called alert, so now we will set a new state when this method is called, and it will put the message text into msg and the type style into type\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      users,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar bg-primary\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          searchUsers: this.searchUsers,\n          clearUsers: this.clearUsers,\n          showClear: users.length > 0 ? true : false,\n          setAlert: this.setAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Users, {\n          loading: loading,\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/users/roxan/onedrive/documents/lambdaweb49/unit3/sprint10/github-user-finder-app/src/App.js"],"names":["React","Component","axios","NavBar","Users","Search","App","state","users","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","clearUsers","setAlert","msg","type","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BM,KAD2B,GACnB;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,OAAO,EAAE,KAFF;AAGPC,MAAAA,KAAK,EAAE;AAHA,KADmB;;AAAA,SAqB3BC,WArB2B,GAqBb,MAAOC,IAAP,IAAgB;AAC7B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMK,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAChB,yCAAwCH,IAAK,cAAaI,OAAO,CAACC,GAAR,CAAYC,0BAA2B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAD7I,CAAlB;AAGA,WAAKN,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEM,GAAG,CAACM,IAAJ,CAASC,KAAlB;AAAyBZ,QAAAA,OAAO,EAAE;AAAlC,OAAd;AACA,KA3B0B;;AAAA,SAiC3Ba,UAjC2B,GAiCd,MAAM;AAClB,WAAKT,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,OAAO,EAAE;AAAtB,OAAd;AACA,KAnC0B;;AAAA,SAsC3Bc,QAtC2B,GAsChB,QAAmB;AAAA,UAAlB;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAkB;AAC7B;AAEA,WAAKZ,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE;AAAEc,UAAAA,GAAG,EAAEA,GAAP;AAAYC,UAAAA,IAAI,EAAEA;AAAlB;AAAT,OAAd;AACA,KA1C0B;AAAA;;AA4C3BC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAElB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKF,KAAhC;AAEA,wBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACC,QAAC,MAAD;AACC,UAAA,WAAW,EAAE,KAAKI,WADnB;AAEC,UAAA,UAAU,EAAE,KAAKW,UAFlB;AAGC,UAAA,SAAS,EAAEd,KAAK,CAACmB,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAA0B,KAHtC;AAIC,UAAA,QAAQ,EAAE,KAAKJ;AAJhB;AAAA;AAAA;AAAA;AAAA,gBADD,eAOC,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEd,OAAhB;AAAyB,UAAA,KAAK,EAAED;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAgBA;;AA/D0B;;AAkE5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from './components/layout/NavBar';\r\nimport Users from './components/users/Users';\r\nimport Search from './components/users/Search';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tusers: [],\r\n\t\tloading: false,\r\n\t\talert: null,\r\n\t};\r\n\r\n\t// using this.state because this is a class component\r\n\t// once we have added our searchUsers method below, this code is no longer needed as all it does is display a random 30 users from a github call\r\n\r\n\t// async componentDidMount() {\r\n\t// \tthis.setState({ loading: true });\r\n\t// \tconst res = await axios.get(\r\n\t// \t\t`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n\t// \t);\r\n\t// \tthis.setState({ users: res.data, loading: false });\r\n\t// }\r\n\r\n\t// below we have drilled UP this.state.text (which is a component-level state) from the Search.js page and so we refer to this \"prop\" as 'text' so we can complete the code needed to change the text state\r\n\r\n\t// to search users now, we make a call to the github search/users\r\n\tsearchUsers = async (text) => {\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n\t\t);\r\n\t\tthis.setState({ users: res.data.items, loading: false });\r\n\t};\r\n\r\n\t// clear users from state; this also works from drilling props UP from the search component\r\n\r\n\t// the showClear prop added to <Search /> below is a ternary used to only show the clear button IF the length of the state of users is greater than 0\r\n\r\n\tclearUsers = () => {\r\n\t\tthis.setState({ users: [], loading: false });\r\n\t};\r\n\r\n\t// set the Alert that is triggered in the Search.js component\r\n\tsetAlert = ({ msg, type }) => {\r\n\t\t// we added a new slice of state about called alert, so now we will set a new state when this method is called, and it will put the message text into msg and the type style into type\r\n\r\n\t\tthis.setState({ alert: { msg: msg, type: type } });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { users, loading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<nav className='navbar bg-primary'>\r\n\t\t\t\t\t<NavBar />\r\n\t\t\t\t</nav>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<Search\r\n\t\t\t\t\t\tsearchUsers={this.searchUsers}\r\n\t\t\t\t\t\tclearUsers={this.clearUsers}\r\n\t\t\t\t\t\tshowClear={users.length > 0 ? true : false}\r\n\t\t\t\t\t\tsetAlert={this.setAlert}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Users loading={loading} users={users} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
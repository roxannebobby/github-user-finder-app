{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\roxan\\\\onedrive\\\\documents\\\\lambdaweb49\\\\unit3\\\\sprint10\\\\github-user-finder-app\\\\src\\\\components\\\\users\\\\Users.js\";\nimport React, { Component } from 'react';\nimport UserItem from './UserItem'; // now users and loading are being passed in directly as props, so we no longer need this.props infront of the map method\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = _ref => {\n  let {\n    users,\n    loading\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-3\",\n    children: users.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n      user: user\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Users;\nexport default Users; // we use this.props.users below because the users are now coming in as props from the App state for users, which fetches from the axios call; also, now that this no longer has state, changing it to a functional component; old class component code below\n// class Users extends Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className='grid-3'>\n// \t\t\t\t{this.props.users.map((user) => (\n// \t\t\t\t\t<UserItem key={user.id} user={user} />\n// \t\t\t\t))}\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/users/roxan/onedrive/documents/lambdaweb49/unit3/sprint10/github-user-finder-app/src/components/users/Users.js"],"names":["React","Component","UserItem","Users","users","loading","map","user","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;;;AACA,MAAMC,KAAK,GAAG,QAAwB;AAAA,MAAvB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAuB;AACrC,sBACC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACED,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACV,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CARD;;KAAML,K;AAUN,eAAeA,KAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\r\nimport UserItem from './UserItem';\r\n\r\n// now users and loading are being passed in directly as props, so we no longer need this.props infront of the map method\r\nconst Users = ({ users, loading }) => {\r\n\treturn (\r\n\t\t<div className='grid-3'>\r\n\t\t\t{users.map((user) => (\r\n\t\t\t\t<UserItem key={user.id} user={user} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Users;\r\n\r\n// we use this.props.users below because the users are now coming in as props from the App state for users, which fetches from the axios call; also, now that this no longer has state, changing it to a functional component; old class component code below\r\n\r\n// class Users extends Component {\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<div className='grid-3'>\r\n// \t\t\t\t{this.props.users.map((user) => (\r\n// \t\t\t\t\t<UserItem key={user.id} user={user} />\r\n// \t\t\t\t))}\r\n// \t\t\t</div>\r\n// \t\t);\r\n// \t}\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\roxan\\\\onedrive\\\\documents\\\\lambdaweb49\\\\unit3\\\\sprint10\\\\github-user-finder-app\\\\src\\\\components\\\\context\\\\github\\\\GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_URSERS, GET_USER, GET_REPOS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GithubState = props => {\n  _s();\n\n  // global state for anything that has to do with users\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  }; // to dispatch to our reducer\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // search users\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // get user\n  // get repos\n  // clear users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // set loading\n\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  }; // this return makes anything we need for the entire app available\n\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["C:/users/roxan/onedrive/documents/lambdaweb49/unit3/sprint10/github-user-finder-app/src/components/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_URSERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","items","clearUsers","CLEAR_USERS","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACCC,YADD,EAECC,WAFD,EAGCC,YAHD,EAICC,QAJD,EAKCC,SALD,QAMO,UANP;;;AAQA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC9B;AACA,QAAMC,YAAY,GAAG;AACpBC,IAAAA,KAAK,EAAE,EADa;AAEpBC,IAAAA,IAAI,EAAE,EAFc;AAGpBC,IAAAA,KAAK,EAAE,EAHa;AAIpBC,IAAAA,OAAO,EAAE;AAJW,GAArB,CAF8B,CAS9B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CAApC,CAV8B,CAY9B;;AACA,QAAMO,WAAW,GAAG,MAAOC,IAAP,IAAgB;AACnCC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAChB,yCAAwCH,IAAK,cAAaI,OAAO,CAACC,GAAR,CAAYC,0BAA2B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAD7I,CAAlB;AAGAT,IAAAA,QAAQ,CAAC;AACRU,MAAAA,IAAI,EAAEvB,YADE;AAERwB,MAAAA,OAAO,EAAEP,GAAG,CAACQ,IAAJ,CAASC;AAFV,KAAD,CAAR;AAIA,GATD,CAb8B,CAwB9B;AAEA;AAEA;;;AAEA,QAAMC,UAAU,GAAG,MAAMd,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAEK;AAAR,GAAD,CAAjC,CA9B8B,CAgC9B;;;AACA,QAAMZ,UAAU,GAAG,MAAM;AACxBH,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAEtB;AAAR,KAAD,CAAR;AACA,GAFD,CAjC8B,CAqC9B;;;AACA,sBACC,QAAC,aAAD,CAAe,QAAf;AACC,IAAA,KAAK,EAAE;AACNO,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADP;AAENC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFN;AAGNC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHP;AAINC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJT;AAKNG,MAAAA;AALM,KADR;AAAA,cASER,KAAK,CAACuB;AATR;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CAnDD;;GAAMxB,W;;KAAAA,W;AAoDN,eAAeA,WAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\nimport {\r\n\tSEARCH_USERS,\r\n\tSET_LOADING,\r\n\tCLEAR_URSERS,\r\n\tGET_USER,\r\n\tGET_REPOS,\r\n} from '../types';\r\n\r\nconst GithubState = (props) => {\r\n\t// global state for anything that has to do with users\r\n\tconst initialState = {\r\n\t\tusers: [],\r\n\t\tuser: {},\r\n\t\trepos: [],\r\n\t\tloading: false,\r\n\t};\r\n\r\n\t// to dispatch to our reducer\r\n\tconst [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n\t// search users\r\n\tconst searchUsers = async (text) => {\r\n\t\tsetLoading();\r\n\t\tconst res = await axios.get(\r\n\t\t\t`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n\t\t);\r\n\t\tdispatch({\r\n\t\t\ttype: SEARCH_USERS,\r\n\t\t\tpayload: res.data.items,\r\n\t\t});\r\n\t};\r\n\r\n\t// get user\r\n\r\n\t// get repos\r\n\r\n\t// clear users\r\n\r\n\tconst clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n\r\n\t// set loading\r\n\tconst setLoading = () => {\r\n\t\tdispatch({ type: SET_LOADING });\r\n\t};\r\n\r\n\t// this return makes anything we need for the entire app available\r\n\treturn (\r\n\t\t<GithubContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tusers: state.users,\r\n\t\t\t\tuser: state.user,\r\n\t\t\t\trepos: state.repos,\r\n\t\t\t\tloading: state.loading,\r\n\t\t\t\tsearchUsers,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</GithubContext.Provider>\r\n\t);\r\n};\r\nexport default GithubState;\r\n"]},"metadata":{},"sourceType":"module"}
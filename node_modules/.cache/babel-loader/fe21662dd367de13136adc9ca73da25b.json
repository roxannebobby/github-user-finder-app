{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\roxan\\\\onedrive\\\\documents\\\\lambdaweb49\\\\unit3\\\\sprint10\\\\github-user-finder-app\\\\src\\\\components\\\\users\\\\Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport GithubContext from '../../context/github/githubContext'; // now users and loading are being passed in directly as props, so we no longer need this.props infront of the map method\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const githubContext = useContext(GithubContext);\n  const {\n    loading,\n    users\n  } = githubContext;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-3\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this);\n  }\n};\n\n_s(Users, \"cq6kQSp/sqGLgC21nRryTknNkLY=\");\n\n_c = Users;\nexport default Users; // we use this.props.users below because the users are now coming in as props from the App state for users, which fetches from the axios call; also, now that this no longer has state, changing it to a functional component; old class component code below\n// class Users extends Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className='grid-3'>\n// \t\t\t\t{this.props.users.map((user) => (\n// \t\t\t\t\t<UserItem key={user.id} user={user} />\n// \t\t\t\t))}\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/users/roxan/onedrive/documents/lambdaweb49/unit3/sprint10/github-user-finder-app/src/components/users/Users.js"],"names":["React","useContext","UserItem","Spinner","GithubContext","Users","githubContext","loading","users","map","user","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B,C,CAEA;;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACnB,QAAMC,aAAa,GAAGL,UAAU,CAACG,aAAD,CAAhC;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBF,aAA3B;;AAEA,MAAIC,OAAJ,EAAa;AACZ,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GAFD,MAEO;AACN,wBACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACEC,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACV,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAOA;AACD,CAfD;;GAAMN,K;;KAAAA,K;AAiBN,eAAeA,KAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useContext } from 'react';\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\n// now users and loading are being passed in directly as props, so we no longer need this.props infront of the map method\r\nconst Users = () => {\r\n\tconst githubContext = useContext(GithubContext);\r\n\tconst { loading, users } = githubContext;\r\n\r\n\tif (loading) {\r\n\t\treturn <Spinner />;\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className='grid-3'>\r\n\t\t\t\t{users.map((user) => (\r\n\t\t\t\t\t<UserItem key={user.id} user={user} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Users;\r\n\r\n// we use this.props.users below because the users are now coming in as props from the App state for users, which fetches from the axios call; also, now that this no longer has state, changing it to a functional component; old class component code below\r\n\r\n// class Users extends Component {\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<div className='grid-3'>\r\n// \t\t\t\t{this.props.users.map((user) => (\r\n// \t\t\t\t\t<UserItem key={user.id} user={user} />\r\n// \t\t\t\t))}\r\n// \t\t\t</div>\r\n// \t\t);\r\n// \t}\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}
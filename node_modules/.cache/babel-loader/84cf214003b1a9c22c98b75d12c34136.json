{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\roxan\\\\onedrive\\\\documents\\\\lambdaweb49\\\\unit3\\\\sprint10\\\\github-user-finder-app\\\\src\\\\components\\\\users\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../components/context/github/githubContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = _ref => {\n  _s();\n\n  let {\n    showClear,\n    clearUsers,\n    setAlert\n  } = _ref;\n  const githubContext = useContext(GithubContext);\n  const [text, setText] = useState('');\n\n  const onChange = e => setText(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter search text ...', 'light');\n    } else {\n      githubContext.searchUsers(text); // below code clears after sending\n\n      setText('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"Search for a User...\",\n        value: text,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-dark btn-block\",\n        name: \"submit\",\n        value: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), showClear && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light btn-block\",\n      onClick: clearUsers,\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Search, \"oq3jGJdjVGGpHuiNnq8eWSt+t48=\");\n\n_c = Search;\nSearch.propTypes = {\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/users/roxan/onedrive/documents/lambdaweb49/unit3/sprint10/github-user-finder-app/src/components/users/Search.js"],"names":["React","useState","useContext","PropTypes","GithubContext","Search","showClear","clearUsers","setAlert","githubContext","text","setText","onChange","e","target","value","onSubmit","preventDefault","searchUsers","propTypes","func","isRequired","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,+CAA1B;;;AAEA,MAAMC,MAAM,GAAG,QAAyC;AAAA;;AAAA,MAAxC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,GAAwC;AACvD,QAAMC,aAAa,GAAGP,UAAU,CAACE,aAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,QAAQ,GAAIC,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/B;;AAEA,QAAMC,QAAQ,GAAIH,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAIP,IAAI,KAAK,EAAb,EAAiB;AAChBF,MAAAA,QAAQ,CAAC,8BAAD,EAAiC,OAAjC,CAAR;AACA,KAFD,MAEO;AACNC,MAAAA,aAAa,CAACS,WAAd,CAA0BR,IAA1B,EADM,CAEN;;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACA;AACD,GAVD;;AAYA,sBACC;AAAA,4BACC;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEK,QAAjC;AAAA,8BACC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,WAAW,EAAC,sBAHb;AAIC,QAAA,KAAK,EAAEN,IAJR;AAKC,QAAA,QAAQ,EAAEE;AALX;AAAA;AAAA;AAAA;AAAA,cADD,eASC;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,SAAS,EAAC,wBAFX;AAGC,QAAA,IAAI,EAAC,QAHN;AAIC,QAAA,KAAK,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,cATD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAiBEN,SAAS,iBACT;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAA4C,MAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAyBA,CA3CD;;GAAMF,M;;KAAAA,M;AA6CNA,MAAM,CAACc,SAAP,GAAmB;AAClBZ,EAAAA,UAAU,EAAEJ,SAAS,CAACiB,IAAV,CAAeC,UADT;AAElBf,EAAAA,SAAS,EAAEH,SAAS,CAACmB,IAAV,CAAeD,UAFR;AAGlBb,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,IAAV,CAAeC;AAHP,CAAnB;AAMA,eAAehB,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GithubContext from '../../components/context/github/githubContext';\r\n\r\nconst Search = ({ showClear, clearUsers, setAlert }) => {\r\n\tconst githubContext = useContext(GithubContext);\r\n\tconst [text, setText] = useState('');\r\n\r\n\tconst onChange = (e) => setText(e.target.value);\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (text === '') {\r\n\t\t\tsetAlert('Please enter search text ...', 'light');\r\n\t\t} else {\r\n\t\t\tgithubContext.searchUsers(text);\r\n\t\t\t// below code clears after sending\r\n\t\t\tsetText('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className='form' onSubmit={onSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='text'\r\n\t\t\t\t\tplaceholder='Search for a User...'\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='submit'\r\n\t\t\t\t\tclassName='btn btn-dark btn-block'\r\n\t\t\t\t\tname='submit'\r\n\t\t\t\t\tvalue='Search'\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t\t{showClear && (\r\n\t\t\t\t<button className='btn btn-light btn-block' onClick={clearUsers}>\r\n\t\t\t\t\tclear\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSearch.propTypes = {\r\n\tclearUsers: PropTypes.func.isRequired,\r\n\tshowClear: PropTypes.bool.isRequired,\r\n\tsetAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}